//DFS
class Solution {
    public int numEnclaves(int[][] grid) {
        int m=grid.length,n=grid[0].length;
        boolean visited[][]=new boolean[m][n];

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((i==0 || j==0 || i==m-1 || j==n-1) && grid[i][j]==1 && !visited[i][j]){
                    dfs(i,j,grid,visited,m,n);
                }
            }
        }

        int count=0;
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                if(grid[i][j]==1 && !visited[i][j]) count++;

        return count;
    }

    void dfs(int r,int c,int[][] grid,boolean[][] visited,int m,int n){
        visited[r][c]=true;
        int arr1[]={0,0,-1,1};
        int arr2[]={-1,1,0,0};

        for(int i=0;i<4;i++){
            int nr=r+arr1[i];
            int nc=c+arr2[i];
            if(nr>=0 && nr<m && nc>=0 && nc<n && grid[nr][nc]==1 && !visited[nr][nc]){
                dfs(nr,nc,grid,visited,m,n);
            }
        }
    }
}

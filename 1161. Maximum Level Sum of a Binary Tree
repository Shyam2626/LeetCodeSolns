/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {

        
        int sum=Integer.MIN_VALUE,maxLvl=0,curLevel=0;

        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);

        while(!q.isEmpty()){
            curLevel++;
            int currSum=0;
            int qSize=q.size();

            for(int i=0;i<qSize;i++){

                TreeNode currNode=q.poll();
                currSum+=currNode.val;

                if(currNode.left!=null)
                    q.add(currNode.left);

                if(currNode.right!=null)
                    q.add(currNode.right);

            }

            if(currSum>sum){
                sum=currSum;
                maxLvl=curLevel;
            }
        }

        return maxLvl;
        
    }
}

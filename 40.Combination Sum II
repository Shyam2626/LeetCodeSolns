class Solution {

    private static void findCombinations(int[] arr,int ind,int t,List<List<Integer>> ans,List<Integer> ds){

        if(t==0){
            ans.add(new ArrayList<>(ds));
            return;
        }

        for(int i=ind;i<arr.length;i++){
            if(i>ind  && arr[i]==arr[i-1]) continue;
            if(arr[i]>t) break;

            ds.add(arr[i]);
            findCombinations(arr,i+1,t-arr[i],ans,ds);
            ds.remove(ds.size()-1);
        }

    }

    public List<List<Integer>> combinationSum2(int[] arr, int t) {
        List<List<Integer>> ans=new ArrayList<>();
        Arrays.sort(arr);
        findCombinations(arr,0,t,ans,new ArrayList<>());
        return ans;
    }
}

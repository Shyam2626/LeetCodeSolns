/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {

        List<Double> ans=new ArrayList<>();
        
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);

        while(!q.isEmpty()){

            int qSize=q.size(),numberOfNodesInCurrLevel=0;
            double currLevelSum=0;

            for(int i=0;i<qSize;i++){

                TreeNode currNode=q.poll();

                currLevelSum+=currNode.val;
                numberOfNodesInCurrLevel++;

                if(currNode.left!=null)
                    q.add(currNode.left);
                
                if(currNode.right!=null)
                    q.add(currNode.right);
            }

            ans.add(currLevelSum/numberOfNodesInCurrLevel);

        }

        return ans;
    }
}
